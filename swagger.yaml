swagger: "2.0"

info:
  version: 1.0.0
  title: MAE API Document
  description: Muxi App Engine API Document

schemes:
  - https
host: simple.api
basePath: /api

tags:
- name: "auth"
  description:  登录
- name: "admin"
  description: 权限管理
- name: "main"
  description: 主API

paths:

##############################以下为登录部分######################################

  /auth/:
    post:
      tags: 
      - "auth"
      summary: MAE登录API
      description: login
      parameters: 
      - name: logininfo
        in: body
        description: 登录所需用户名密码
        required: true
        schema:
          required: 
            - username
            - password
          properties:
            password:
              type: string
            username:
              type: string
      responses:
        200:
          description: 登录成功
          schema:
            required: 
              - uid
              - token
            properties:
              uid:
                type: integer
              token:
                type: string
        401:
          description: 密码错误 or 用户不存在
  
#####################################以下为权限管理部分#######################################
  
  /admin/users/:
    get:
      tags:
        - "admin"
      summary: 获取用户列表
      parameters: 
        - in: header
          name: token
          description:  标识身份的Token
          required: true
          type: string
      responses:
        200:
          description: a list of users
          schema:
            type: array
            items:
              required: 
                - username
                - uid
              properties:
                username:
                  type: string
                uid:
                  type: integer
        403:
          description: Forbidden
  
  /admin/user/{uid}/:
    post:
      tags:
        - "admin"
      summary: 更改用户角色
      description: 用户角色包括:超级管理员(对用户和应用拥有全部权限)， 管理员(对所有应用拥有全部权限), 普通用户(对所有应用拥有查看权限)，游客(无任何权限).
      parameters: 
        - in: header
          name: token
          description:  标识身份的Token
          required: true
          type: string
        - in: path
          name: uid
          description: 用户id
          required: true
          type: integer
        - in: body
          name: info
          required: true
          description: 可选superadmin admin average visitor
          schema:
            properties:
              role:
                type: string
      responses:
        200:
          description: OK
        403:
          description: Forbidden
    
  /app/{appid}/service/{svcid}/admin/:
    get:
      tags:
        - "admin"
      summary: 获取该服务用户列表
      parameters:
        - in: header
          name: token
          description:  标识身份的Token
          required: true
          type: string
        - in: path
          name: appid
          description: 应用id
          required: true
          type: integer
        - in: path
          name: svcid
          description: 服务id
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            properties:
              adminlist:
                type: array
                description: 管理员列表
                items:
                  type: string
              creatorlist:
                type: array
                description: 创建权限用户列表
                items:
                  type: string
              deletorlist:
                type: array
                description: 删除权限用户列表
                items:
                  type: string
        403:
          description: Forbidden
          
    post:
      tags:
        - "admin"
      summary: 管理用户对应用的权限
      description: 每个应用有adminlist, creatorlist, deletorlist,分别存放拥有管理权限（增删和用户赋权),创建权限和删除权限的用户.
      parameters: 
        - in: header
          name: token
          description:  标识身份的Token
          required: true
          type: string
        - in: path
          name: appid
          description: 应用id
          required: true
          type: integer
        - in: path
          name: svcid
          description: 服务id
          required: true
          type: integer
        - in: body
          name: postinfo
          description: post Body
          required: true
          schema:
            properties:
              listtype:
                type: string
                description: 可选admin creator deletor
              uid:
                type: integer
      responses:
        200:
          description: OK
        403:
          description: Forbidden
        409:
          description: 用户已在列表中
        
    delete:
      tags:
        - "admin"
      summary: 删除用户对应用的权限
      parameters: 
        - in: header
          name: token
          description:  标识身份的Token
          required: true
          type: string
        - in: path
          name: appid
          description: 应用id
          required: true
          type: integer
        - in: path
          name: svcid
          description: 服务id
          required: true
          type: integer
        - in: body
          name: deleteinfo
          description: delete Body
          required: true
          schema:
            properties:
              listtype:
                type: string
                description: 可选admin creator deletor
              uid:
                type: integer
      responses:
        200:
          description: OK
        403:
          description: Forbidden
        409:
          description: 用户本不在列表中
        
      
                  
#################################以下为主API部分#########################################
  
  /apps/:
    get:
      tags:
        - "main"
      summary: 获取应用列表
      parameters: 
        - in: header
          name: token
          description:  标识身份的Token
          required: true
          type: string
      responses:
        200:
          description: a \*list* of apps
          schema:
            type: array
            items:
              required: 
                - appname
                - appid
              properties:
                appid:
                  type: integer
                appname:
                  type: string


  /app/:
    post:
      tags:
        - "main"
      summary: 创建一个应用
      parameters: 
        - in: body
          name: appname
          required: true
          schema:
            required:
              - appname
            properties:
              appname:
                type: string
        - in: header
          name: token
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            required: 
              - appid
            properties:
              appid:
                type: integer
        403:
          description: Forbidden
        
                
  /app/{appid}/services/:
    get:
      tags:
        - "main"
      summary: 获取一个app内所有服务
      parameters: 
        - in: header
          name: token
          description: 标识身份
          required: true
          type: string
        - in: path
          name: appid
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              required: 
                - svcid
                - svcname
              properties:
                svcid:
                  type: integer
                svcname:
                  type: string
        403:
          description: Forbidden
  
  /app/{appid}/service/:      
    post:
      tags:
        - "main"
      summary: 创建一个服务(默认创建一个版本)
      description: 一个service在k8s内创建一个相应service, 并可以代理多个版本(灰度发布)
      parameters: 
        - in: path
          name: appid
          description: APP id
          required: true
          type: integer
        - in: header
          name: token
          description: 标识身份
          required: true
          type: string
        - in: body
          name: svcinfo
          description: 服务信息：包括name与port
          required: true
          schema:
            required: 
              - svcname
              - port
              - version
            properties:
              svcname:
                type: string
              port:
                type: integer
              version:
                $ref: '#/definitions/VersionCreate'
              
      responses:
        200:
          description: OK
          schema:
            required: 
              - svcid
            properties:
              appid:
                type: integer
        403:
          description: Forbidden
  
  
    
  /app/{appid}/service/{svcid}/versions/:
    get:
      tags:
        - "main"
      summary: 获取一个服务所有版本.
      parameters:
        - in: path
          name: appid
          description: 应用 ID
          required: true
          type: integer
        - in: path
          name: svcid
          description: 服务 ID
          required: true
          type: integer
        - in: header
          name: token
          required: true
          type: string
          
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
        403:
          description: Forbidden
              
  /app/{appid}/service/{svcid}/version/:
    post:
      tags:
        - "main"
      summary: 创建一个服务的某个版本
      parameters: 
        - in: path
          name: appid
          description: 应用 ID
          required: true
          type: integer
        - in: path
          name: svcid
          description: 服务 ID
          required: true
          type: integer
        - in: header
          name: token
          required: true
          type: string
        - in: body
          name: version_create_info
          schema:
            $ref: '#/definitions/VersionCreate'
            
      responses:
        200:
          description: OK
          schema:
            required:
              - versionid
            properties:
              versionid:
                type: integer
        403:
          description: Forbidden
                
  /app/{appid}/service/{svcid}/version/{versionid}/:
    get:
      tags:
        - "main"
      summary: 激活&停用某版本
      parameters: 
        - in: path
          name: appid
          description: 应用 ID
          required: true
          type: integer
        - in: path
          name: svcid
          description: 服务 ID
          required: true
          type: integer
        - in: path
          name: versionid
          required: true
          description: 版本 ID
          type: integer
        - in: header
          name: token
          required: true
          type: string
        - in: query
          name: action
          description: 可选action有active deactive
          required: true
          type: string
          
      responses:
        200:
          description: OK
        403:
          description: Forbidden
        409:
          description: Conflict,原本已经active 或 deactive

    post:
      tags:
        - "main"
      summary: 重建某版本
      parameters: 
        - in: path
          name: appid
          description: 应用 ID
          required: true
          type: integer
        - in: path
          name: svcid
          description: 服务 ID
          required: true
          type: integer
        - in: path
          name: versionid
          required: true
          description: 版本 ID
          type: integer
        - in: header
          name: token
          required: true
          type: string
        - in: body
          name: RebuildInfo
          required: true
          schema:
            required: 
              - imageurl
              - imagetag
            properties:
              imageurl:
                type: string
              imagetag:
                type: string
      responses:
        200:
          description: OK
        403:
          description: Forbidden
       
    delete:
      tags:
        - "main"
      summary: 删除某个版本
      parameters:
        - in: path
          name: appid
          description: 应用 ID
          required: true
          type: integer
        - in: path
          name: svcid
          description: 服务 ID
          required: true
          type: integer
        - in: path
          name: versionid
          required: true
          description: 版本 ID
          type: integer
        - in: header
          name: token
          required: true
          type: string
      responses:
        200:
          description: OK
        403:
          description: Forbidden

  /app/{appid}/service/{svcid}/version/{versionid}/logs:
    get:
      tags:
        - "main"
      summary: 获取Log
      parameters:
        - in: path
          name: appid
          description: 应用 ID
          required: true
          type: integer
        - in: path
          name: svcid
          description: 服务 ID
          required: true
          type: integer
        - in: path
          name: versionid
          required: true
          description: 版本 ID
          type: integer
        - in: query
          name: tail
          description: log从后往前的行数,0为全部
          type: integer
          required: true
        - in: header
          name: token
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Log'
  
  /app/{appid}/net/:
    post:
      tags:
        - "main"
      summary: 为app提供简单反向代理支持
      parameters: 
        - in: path
          name: appid
          description: 应用 ID
          required: true
          type: integer
        - in: header
          name: token
          required: true
          type: string
        - in: body
          name: nginxconf
          schema:
            $ref: '#/definitions/NginxServer'
          required: true
      responses:
        200:
          description: OK
    
          
          
definitions:
  Version:
    required: 
      - appname
      - svcname
      - version
      - status
    properties:
      appname:
        description: app名字
        type: string
      svcname:
        description: svc名字
        type: string
      version:
        description: 版本名
        type: string
      status:
        description: 状态:是否正在使用
        type: string
  
  VersionCreate:
    required: 
      - appname
      - servicename
      - versionname
      - containers
    properties:
      appname:
        description: App名字, 不需要用户填写，由前端自己传
        type: string
      servicename:
        description: 服务名，不需要用户填写，由前端自己传
      versionname:
        description: App 版本号
        type: string
      replicas:
        description: 副本数量
        type: integer
        default: 1
      containers:
        description: 容器信息
        type: array
        items:
          $ref: "#/definitions/Container"
          
  Container:
    required: 
      - containername
      - imageurl
      
    properties:
      containername:
        description: container名字
        type: string
      imageurl:
        description: 镜像地址
        type: string
      imagetag:
        description: 镜像版本号
        type: string
        default: latest
      runcmd:
        description: 容器运行命令
        type: string
        default: 空
      envs:
        description: 环境变量键值对
        type: array
        items:
          $ref: '#/definitions/ENVpair'
      port:
        description: 容器开放的端口
        type: integer
        default: 3000
      volumns:
        description: 挂载点键值对
        type: array
        items:
          $ref: '#/definitions/VolumnPair'
        default: 空
        
  
  ENVpair:
    required: 
      - envname
      - envvalue
    properties:
      envname:
        type: string
      envvalue:
        type: string
  
  VolumnPair:
    required: 
      - innerlocation
      - outlocation
    properties:
      innerlocation:
        description: 在容器内的挂载点
        type: string
      outlocation:
        description: 在宿主机上挂载点
        type: string
    
  Log:
    required: 
      - log
    properties:
      log:
        description: log
        type: string 
        
        
  NginxServer:
    required: 
      - listen
      - servername
      - location
    properties:
      listen:
        description: 监听端口
        type: integer
      servername:
        description: 访问该应用使用的域名或IP
        type: string
      location:
        description: URL匹配规则
        type: array
        items:
          $ref: '#/definitions/NginxLocation'

  
  NginxLocation:
    required: 
      - rule
      - proxy_pass
    properties:
      rule:
        description: 匹配规则，如"/" 或 "^~ /api/" 等
        type: string
      proxy_pass:
        description: 导向的App, 如"http://consume-fe.consume-fe.svc.cluster.local:3000"
        type: string
      

